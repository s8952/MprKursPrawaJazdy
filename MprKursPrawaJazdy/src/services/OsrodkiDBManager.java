package services;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import mprKursPrawaJazdy.*;

public class OsrodkiDBManager {

	private Connection conn;
	private Statement createTable;
	private PreparedStatement addOsrodkiStmt;
	private PreparedStatement getOsrodkiStmt;
	private PreparedStatement findOsrodkiByNazwaStmt;
	private PreparedStatement deleteOsrodkiStmt;
	private PreparedStatement deleteAllOsrodkiStmt;



	public OsrodkiDBManager(){
	
	try {
		conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/workdb");		
		createTable = conn.createStatement();
		ResultSet rs=conn.getMetaData().getTables(null, null, null, null);
		boolean OsrodkiTableExists=false;
		while(rs.next())
		{
			if("Osrodki".equalsIgnoreCase(rs.getString("Table_Name")))
			{
				OsrodkiTableExists=true;
				break;
			}
		}
		if(!OsrodkiTableExists)
		{
		createTable.executeUpdate("" +
		"CREATE TABLE Osrodki(" +
		"id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY," +
		"nazwa varchar(20)," +
		"" +
		")");
		}

		addOsrodkiStmt = conn.prepareStatement("" +"INSERT INTO Osrodki (nazwa) VALUES (?)" +"");

		getOsrodkiStmt = conn.prepareStatement("" +"SELECT * FROM Osrodki" +"");

		findOsrodkiByNazwaStmt = conn.prepareStatement("SELECT * FROM Osrodki WHERE nazwa= ?");

		deleteOsrodkiStmt = conn.prepareStatement("DELETE FROM Osrodki WHERE ID = ?");

		deleteAllOsrodkiStmt = conn.prepareStatement("DELETE FROM Osrodki");

		} catch (SQLException e) {

		e.printStackTrace();
		}
	}



public List<Integer> findOsrodkiByNazwa(String nazwa) {
		try {
			List<Integer> result = new ArrayList<Integer>();
			findOsrodkiByNazwaStmt.setString(1, nazwa);
			ResultSet rs = findOsrodkiByNazwaStmt.executeQuery();
			while (rs.next())
				result.add(rs.getInt("ID"));
			return result;
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}

	public void addOsrodki(Osrodki o){
		try {
			addOsrodkiStmt.setString(1, o.getNazwa());

			addOsrodkiStmt.executeUpdate();

		} catch (SQLException e) {

			e.printStackTrace();
		}

	}

	public List<Osrodki> getAllOsrodki(){
		List<Osrodki> osrodki=new ArrayList<Osrodki>();

		try {
			ResultSet rs= getOsrodkiStmt.executeQuery();

			while(rs.next())
			{
				osrodki.add(new Osrodki(rs.getString("nazwa")));
			}

		} catch (SQLException e) {

			e.printStackTrace();
		}

	return osrodki;
	}

	public void deleteOsrodki(List<Integer> osrodki) {
		try {
			for (Integer id : osrodki) {
				deleteOsrodkiStmt.setInt(1, id);
				deleteOsrodkiStmt.executeUpdate();
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void deleteAllOsrodki() {
		try {
			deleteAllOsrodkiStmt.executeUpdate();
		} 
		catch (SQLException e) 
		{
			e.printStackTrace();
		}
	}


}



